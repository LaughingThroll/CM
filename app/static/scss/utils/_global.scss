html {
	box-sizing: border-box;
	font-size: $main-fz;
}
html,
body {
	height: 100%;
}
*,
*::before,
*::after {
	box-sizing: inherit;
}
body {
	margin: 0;
	padding: 0;
	font-family: $main-font;
	color: $main-color;
}
// start reset CSS
h1,
h2,
h3,
h4,
h5,
h6,
p {
	margin: 0;
	padding: 0;
	text-transform: capitalize;
}

input,
button,
textarea,
select {
	border: none;
}
button {
	padding: 0;
	background-color: transparent;
	cursor: pointer;
}
textarea {
	resize: none;
}
ul,
li {
	list-style: none;
	margin: 0;
	padding: 0;
}
a {
	display: inline-block;
	text-decoration: none;
	cursor: pointer;
}
// end reset CSS

.wrapper {
	display: flex;
	flex-direction: column;
	position: relative;
	height: 100vh;
	overflow: hidden;
}
.content {
	flex: 1 0 auto;
}
.footer {
	flex: 0 0 auto;
}
.container {
	max-width: 1460px;
	padding: 0 15px;
	margin: 0 auto;
}
.img {
	background-size: cover;
	background-position: top center;
	background-repeat: no-repeat;
}
.coll-number {
	color: $main-grey;
	line-height: 30px;
	font-size: 14px;
	display: inline-block;
	width: 60px;
}
.row {
	display: flex;
	&:first-child {
		margin-bottom: rem(40px);
	}
	&:last-child {
		align-items: flex-end;
	}
}

//  попробовать это генерировать через JS сложность в том чтобы добраться до псевдоелементов getComputedStyle и нужно ли это генерировать с JS ??
.model-page {
	&::before,
	&::after {
		content: "";
		position: absolute;
		z-index: -1;
		height: 0;
		width: 0;
		transition: all 3s ease;
	}
	&-0000 {
		&::before {
			background-color: $main-blue;  
		}
		&::after {
			background-color: $main-pink;
		}
	}
	// colors on different design
	&-0001 {
		.img {
			position: relative;
			&::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba($white, 0.2);
      }
		}
		&::before {
			background-color: $second-green;
		}
		&::after {
			background-color: $second-pink;	
		}
	}
	&-0002 {
		&::before {
			background-color: $third-purple;
		}
		&::after {
			background-color: $white;	
		}
	}
	&-0003 {
		color: $fourth-white;  
		g {
			fill: $fourth-white;
		}
		.current-model__pagination-dot {
			color: $fourth-white;
			&::before,
			&::after {
				background-color: $fourth-white;
			}
		}
		.current-model__arrow {
			color: $fourth-white;
		}
		.footer-collection__title {
			&::before {
				background-color: $fourth-white;
			}
		}
		&::before {
			background-color: $fourth-red;
		}
		&::after {
			background-color: $fourth-black;	
		}
		.img {
			position: relative;
			&::before {
				content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
				background-color: rgba($black, .5);
			}
		}
	}
	// end
	&--vertical {
		&::before,
		&::after {
			top: 0;
			height: 100%;
			width: 50%;
			animation: defaultParties 1s ease-in forwards;
			// transition: all 3s ease;
			
		}
		&::before {
			right: 0;
			transform: translateX(100%);
		}
		&::after {
			left: 0;
			transform: translateX(-100%);
		}
	}
	&--horizontal {
		&::before,
		&::after {
			left: 0;
			height: 50%;
			width: 100%;
			transition: all 3s ease;
		}
		&::before {
			bottom: 0;
			
		}
		&::after {
			top: 0;
		}
	}
	&--horizontal-mode-1 {
		&::before,
		&::after {
			left: 0;
			width: 100%;
		}
		&::before {
			bottom: 0;
			height: 80%;
		}
		&::after {
			top: 0;
			height: 20%;
		}
	}
	&--horizontal-mode-2 {
		&::before,
		&::after {
			left: 0;
			width: 100%;
		}
		&::before {
			bottom: 0;
			height: 20%;
		}
		&::after {
			top: 0;
			height: 80%;
		}
	}
	
}
.phone {
	font-size: rem(20px);
  color: $main-color;
}

.gallery {
	display: flex;
	justify-content: space-between;
	flex-wrap: wrap;
}

.model-socials {
	li {
    display: inline-block;
    & + li {
      margin-left: 15px;
    }
    a {
      color: $main-color;
      padding: 3px;
      font-size: (18px);
      position: relative;
      &::before {
        content: "";
        position: absolute;
        bottom: 2px;
        right: 0;
        height: 1px;
        width: 0;
        background-color: $main-color;
        transition: all 0.3s ease-out;
      }
      &:hover::before {
        left: 0;
        width: 100%;
      }
    }
  }
}

.about-descr {
	max-width: 500px;
	font-size: rem(20px);
	height: 250px;
	overflow: hidden;

}

.about-model-list {
	li {
		// padding-left: 110px;
		font-size: rem(16px);
		position: relative;
		span {
			color: darken($main-grey, 30);
		}
		& + li {
			margin-top: 5px;
		}
		// идея такая чтобы динамически высчитывать размер линии и паддинг для li в зависимости от парметров
		&:first-child {
			padding-left: 110px;
		}
		&::before {
			content: "";
			position: absolute;
			top: 51%;
			left: 0;
			height: 1px;
			background-color: $black;
		}
		&:first-child::before {
			
			width: 100px;
		}
		&:nth-child(2) {
			padding-left: 95px;
		}
		&:nth-child(2)::before {
			width: 85px;
		}
		&:nth-child(3) {
			padding-left: 70px;
		}
		&:nth-child(3)::before {
			width: 60px;
		}
		&:nth-child(4) {
			padding-left: 100px;
		}
		&:nth-child(4)::before {
			width: 90px;
		}
		&:nth-child(5) {
			padding-left: 130px;
		}
		&:nth-child(5)::before {
			width: 120px;
		}
		&:nth-child(6) {
			padding-left: 60px;
		}
		&:nth-child(6)::before {
			width: 50px;
		}
	}
}